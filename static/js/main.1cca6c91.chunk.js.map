{"version":3,"sources":["components/site-capgag/Site-CapGag.jsx","components/my-films/My-Films.jsx","components/App.jsx","index.js"],"names":["SiteCapGag","className","MyFilms","React","useState","myFilmsPack","setMyFilmsPack","useEffect","reqKinopoiskFilm","i","tempNameFilm","dataMyFilms","name_russian","tempYearFilm","year","length","Promise","resolve","reject","setTimeout","a","fetch","queryFetch","ok","status","json","queryJSON","data","then","result","map","itemReqFilm","reqNameFilm","reqYearFilm","push","catch","errResponse","console","log","item","src","big_poster","alt","country_ru","description","slogan","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0nMAUeA,MARf,WACE,OACE,qBAAKC,UAAU,aAAf,+R,6CC+GWC,MA7Gf,WACE,MAAsCC,IAAMC,SAAS,IAArD,mBAAOC,EAAP,KAAoBC,EAApB,KAiFA,OA9EAH,IAAMI,WAAU,WAKd,IAHA,IAAIC,EAAmB,GAFH,WAKXC,GAEP,IAAIC,EAAeC,EAAYF,GAAGG,aAC9BC,EAAeF,EAAYF,GAAGK,KAG9BL,EAAI,IAAME,EAAYI,OAIxB,IAAIC,SAAQ,SAACC,EAASC,GAEpBC,WAAU,sBAAC,8BAAAC,EAAA,sEACcC,MAAM,8CAAD,OACoBX,IAFvC,WACLY,EADK,QAMOC,GANP,gBAOPL,EAAO,qIAAD,OAA6BI,EAAWE,SAPvC,uCASeF,EAAWG,OAT1B,OASHC,EATG,OAWPT,EAAQS,EAAUC,MAXX,4CAaR,QAIFC,MAAK,SAACC,GAILA,EAAOC,KAAI,SAAUC,GACnB,IAAIC,EAAcD,EAAYnB,aAC1BqB,EAAcF,EAAYjB,KAI5BJ,IAAiBsB,GACjBnB,IAAiBoB,GASjBzB,EAAiB0B,KAAKH,MAO1BzB,EAAeE,MAGhB2B,OAAM,SAACC,GAENC,QAAQC,IAAIF,MAGhBC,QAAQC,IAAR,6BAAmB7B,EAAI,KAhElBA,EAAI,EAAGA,EAAIE,EAAYI,OAAQN,IAAM,EAArCA,KAmER,IAEHJ,EAAYyB,KAAI,SAAUS,GACxBF,QAAQC,IAAIC,MAIZ,sBAAKtC,UAAU,UAAf,UACE,oIAEA,uBACCI,EAAYyB,KAAI,SAAUS,GACzB,OACE,gCACE,6BAAKA,EAAK3B,eACV,qBAAK4B,IAAKD,EAAKE,WAAYC,IAAI,KAC/B,uEACWH,EAAKI,WACd,uBAFF,qDAGaJ,EAAKK,YAChB,uBAJF,yCAKWL,EAAKM,OACd,uBANF,uBAOQN,EAAKzB,QAEb,iCC9FGgC,MATf,WACE,OACE,sBAAK7C,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCDN8C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1cca6c91.chunk.js","sourcesContent":["import \"./Site-CapGag.scss\";\n\nfunction SiteCapGag() {\n  return (\n    <div className=\"SiteCapGag\">\n      Пока сайт на реконструкции, посмотрите контент ниже:\n    </div>\n  );\n}\n\nexport default SiteCapGag;\n","import React from \"react\"; // импортируем React\n\nimport \"./My-Films.scss\"; // импортируем стили компонента\nimport dataMyFilms from \"./../../DATAS/MyFilms.json\"; // импортируем наш массив с названиями и годами фильмов\n\n// главная функция компонента\nfunction MyFilms() {\n  const [myFilmsPack, setMyFilmsPack] = React.useState([]);\n\n  // данный useEffect сработает при монтировании компонента всего лишь один раз\n  React.useEffect(() => {\n    // let testIndex = 0; // TODO: НАВЕРНОЕ ВРЕМЕННО\n    let reqKinopoiskFilm = []; // массив для найденных одинаковых фильмов из нашего массива и запроса\n\n    // бегаем по нашему массиву с названиями и годами фильмов\n    for (let i = 0; i < dataMyFilms.length; i++) {\n      // запишем во временные переменные название и год фильма на текущей итерации из соответствующего объекта в массиве\n      let tempNameFilm = dataMyFilms[i].name_russian;\n      let tempYearFilm = dataMyFilms[i].year;\n\n      // все фильмы кроме последнего в массиве\n      if (i + 1 !== dataMyFilms.length) {\n        // console.log(i + 1); // выводим текущий номер итерации\n\n        // создаем обещание, чтобы ждало\n        new Promise((resolve, reject) => {\n          // сделаем между запросами дистанцию\n          setTimeout(async () => {\n            let queryFetch = await fetch(\n              `https://kinobd.ru/api/films/search/title?q=${tempNameFilm}`\n            ); // отправим запрос на наше апи с названием из нашего массива и запишем ответ\n\n            // если произошла ошибка\n            if (!queryFetch.ok) {\n              reject(`Ошибка ответа на запрос №${queryFetch.status}`); // зареджектим наш промис\n            } /* если все хорошо и ответ пришел*/ else {\n              let queryJSON = await queryFetch.json(); // запишем ответ в нашу временную переменную\n\n              resolve(queryJSON.data);\n            }\n          }, 1000);\n        })\n          // если все хорошо и промис зарезолвился\n          // eslint-disable-next-line no-loop-func\n          .then((result) => {\n            // console.log(\"все хорошо\");\n\n            // бегаем по полученному массиву для каждого из фильмов\n            result.map(function (itemReqFilm) {\n              let reqNameFilm = itemReqFilm.name_russian; // из полученного массива для каждого из фильмов сохраняем во временную переменную название фильма\n              let reqYearFilm = itemReqFilm.year; // и год тоже\n\n              // условие если название и год фильма из нашего массива схожи с названием и годом фильма из полученного массива\n              if (\n                tempNameFilm === reqNameFilm &&\n                tempYearFilm === reqYearFilm\n              ) {\n                /* то */\n                // testIndex++;\n\n                // console.log(`_______ | ${testIndex} ______`);\n                // console.log(reqNameFilm, reqYearFilm);\n                // console.log(\"_____________\");\n\n                reqKinopoiskFilm.push(itemReqFilm);\n              }\n\n              /*else {\n              }*/\n            });\n\n            setMyFilmsPack(reqKinopoiskFilm);\n          })\n          // отловим нашу ошибку\n          .catch((errResponse) => {\n            // выведем ошибку в консоль если промис зареджектился\n            console.log(errResponse);\n          });\n      } /* последний фильм в массиве */ else {\n        console.log(`все ${i + 1}`);\n      }\n    }\n  }, []);\n\n  myFilmsPack.map(function (item) {\n    console.log(item);\n  });\n\n  return (\n    <div className=\"MyFilms\">\n      <h4>Мои любимые фильмы</h4>\n      {/* <pre>{JSON.stringify(dataMyFilms, null, 2)}</pre> */}\n      <br />\n      {myFilmsPack.map(function (item) {\n        return (\n          <div>\n            <h1>{item.name_russian}</h1>\n            <img src={item.big_poster} alt=\"\" />\n            <p>\n              Страна: {item.country_ru}\n              <br />\n              Описание: {item.description}\n              <br />\n              Слоган: {item.slogan}\n              <br />\n              Год: {item.year}\n            </p>\n            <hr />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default MyFilms; // экспортируем компонент\n","import \"./App.scss\";\nimport SiteCapGag from \"./site-capgag/Site-CapGag\";\nimport MyFilms from \"./my-films/My-Films\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SiteCapGag />\n      <MyFilms />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.scss\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}