{"version":3,"sources":["components/site-capgag/Site-CapGag.jsx","components/my-films/My-Films.jsx","components/App.jsx","index.js"],"names":["SiteCapGag","className","MyFilms","useState","error","setError","isLoaded","setIsLoaded","stateFilms","setFilmsState","arrayFilms","useEffect","i","tempLocalNameFilm","dataMyFilms","nameRu","tempLocalNameENGFilm","tempLocalYearFilm","year","hasOwnProperty","nameEn","Promise","resolve","reject","setTimeout","fetchThisFilm","length","componentStart","map","filmState","src","posterUrl","alt","description","genres","genre","rating","localNameFilm","localNameENGFilm","localYearFilm","localIDFilm","a","fetch","method","headers","queryFetch","ok","status","json","films","itemResponse","reqNameFilm","reqNameENGFilm","reqYearFilm","console","log","push","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"o8LAUeA,MARf,WACE,OACE,qBAAKC,UAAU,aAAf,+R,6CCoEWC,MAjEf,WACE,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAGIC,EAAa,GAQjB,OANAC,qBAAU,WACRF,EAAc,IA0DlB,SACEF,EACAH,EACAC,EACAK,EACAD,GAIA,IAHC,IAAD,WAGSG,GAGP,IAAIC,EAAoBC,EAAYF,GAAGG,OACnCC,EAAuB,KACvBC,EAAoBH,EAAYF,GAAGM,KAOvC,GAJIJ,EAAYF,GAAGO,eAAe,YAChCH,EAAuBF,EAAYF,GAAGQ,SAGnChB,EACwB,IAAIiB,SAAQ,SAACC,EAASC,GAG/CC,WACEC,EACI,IAAJb,EACAC,EACAG,EACAC,EACAL,EACAL,EACAF,EACAK,EACAD,OA1BCG,EAAI,EAAGA,EAAIE,EAAYY,OAAQd,IAAM,EAArCA,GAjEPe,CAAepB,EAAaH,EAAOC,EAAUK,EAAYD,KACxD,IAECL,EAEA,sBAAKH,UAAU,UAAf,UACE,iTACA,4BAAIG,OAGEE,EAYR,sBAAKL,UAAU,UAAf,UACE,kHACA,uBACA,8BACGO,EAAWoB,KAAI,SAAUC,GAExB,OACE,8BACE,gCACE,+BACGA,EAAUd,OADb,MACwBc,EAAUT,UAElC,qBAAKU,IAAKD,EAAUE,UAAWC,IAAKH,EAAUd,SAC9C,4BAAIc,EAAUI,cACd,0DACQ,IACLJ,EAAUK,OAAON,KAAI,SAAUO,GAC9B,OAAO,iCAAOA,EAAMA,MAAb,cAGX,6EAAaN,EAAUO,UACvB,qDAASP,EAAUX,qBA7B/B,qBAAKjB,UAAU,UAAf,SACE,6M,SAmFOwB,E,4FAAf,WACEY,EACAC,EACAC,EACAC,EACAjC,EACAF,EACAK,EACAD,GARF,eAAAgC,EAAA,+EAa2BC,MAAM,gFAAD,OACsDL,GAChF,CACEM,OAAQ,MACRC,QAAS,CACP,YAAa,uCACb,eAAgB,sBAnB1B,WAaQC,EAbR,QAwBoBC,GAxBpB,gBAyBMzC,EAAS,qIAAD,OAA6BwC,EAAWE,SAzBtD,wCA2B+BF,EAAWG,OA3B1C,eA8BmBC,MAAMrB,KAAI,SAACsB,GACtB,IAAIC,EAAcD,EAAanC,OAC3BqC,EAAiBF,EAAa9B,OAC9BiC,EAAcH,EAAahC,MAG5BmB,IAAkBc,GACjBZ,IAAkBc,GACG,OAArBf,GACAA,IAAqBc,GACtBf,IAAkBc,GACjBZ,IAAkBc,GACG,OAArBf,KAEFgB,QAAQC,IAAIL,EAAcb,EAAeE,EAAeC,GAGxD9B,EAAW8C,KAAKN,GAEZV,EAAc,IAAM1B,EAAYY,SAClCnB,GAAY,GACZE,EAAcC,QAnD1B,0DAyDIL,EAAS,qIAAD,cAzDZ,2D,sBCvGeoD,MATf,WACE,OACE,sBAAKxD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCDNyD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e79d0ff2.chunk.js","sourcesContent":["import \"./Site-CapGag.scss\";\r\n\r\nfunction SiteCapGag() {\r\n  return (\r\n    <div className=\"SiteCapGag\">\r\n      Пока сайт на реконструкции, посмотрите контент ниже:\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SiteCapGag;\r\n","/* eslint-disable no-loop-func */\r\nimport React, { useEffect, useState } from \"react\"; // импортируем React\r\n\r\nimport \"./My-Films.scss\"; // импортируем стили компонента\r\n\r\nimport dataMyFilms from \"./../../DATAS/MyFilms.json\"; // импортируем наш массив с названиями и годами фильмов\r\n\r\nfunction MyFilms() {\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [stateFilms, setFilmsState] = useState([]);\r\n  let test123 = 0;\r\n\r\n  let arrayFilms = [];\r\n\r\n  useEffect(() => {\r\n    setFilmsState([]);\r\n\r\n    componentStart(setIsLoaded, error, setError, arrayFilms, setFilmsState);\r\n  }, []); // когда компонент смонтируется, запустим функцию\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"MyFilms\">\r\n        <h4>Ошибка загрузки любимых фильмов, обновите страницу!</h4>\r\n        <p>{error}</p>\r\n      </div>\r\n    );\r\n  } else if (!isLoaded) {\r\n    // загрузка\r\n\r\n    return (\r\n      <div className=\"MyFilms\">\r\n        <h4>Загружаются мои любимые фильмы...</h4>\r\n      </div>\r\n    );\r\n  } else {\r\n    // все хорошо\r\n\r\n    return (\r\n      <div className=\"MyFilms\">\r\n        <h4>Любимые фильмы:</h4>\r\n        <br />\r\n        <div>\r\n          {stateFilms.map(function (filmState) {\r\n            test123++;\r\n            return (\r\n              <div>\r\n                <div>\r\n                  <h1>\r\n                    {filmState.nameRu} | {filmState.nameEn}\r\n                  </h1>\r\n                  <img src={filmState.posterUrl} alt={filmState.nameRu} />\r\n                  <p>{filmState.description}</p>\r\n                  <p>\r\n                    Жанр:{\" \"}\r\n                    {filmState.genres.map(function (genre) {\r\n                      return <span>{genre.genre}, </span>;\r\n                    })}\r\n                  </p>\r\n                  <p>Рейтинг: {filmState.rating}</p>\r\n                  <p>Год: {filmState.year}</p>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyFilms;\r\n\r\nfunction componentStart(\r\n  setIsLoaded,\r\n  error,\r\n  setError,\r\n  arrayFilms,\r\n  setFilmsState\r\n) {\r\n  // когда компонент смонтируется, запустим функцию\r\n\r\n  for (let i = 0; i < dataMyFilms.length; i++) {\r\n    // бегаем по нашему массиву с фильмами\r\n\r\n    let tempLocalNameFilm = dataMyFilms[i].nameRu;\r\n    let tempLocalNameENGFilm = null;\r\n    let tempLocalYearFilm = dataMyFilms[i].year;\r\n    // получили во временные переменные наше название фильма и год для текущей итерации\r\n\r\n    if (dataMyFilms[i].hasOwnProperty(\"nameEn\")) {\r\n      tempLocalNameENGFilm = dataMyFilms[i].nameEn;\r\n    }\r\n\r\n    if (!error) {\r\n      let promiseQueryThisFilm = new Promise((resolve, reject) => {\r\n        // инициализация промиса для асинхронной работы\r\n        // создаем задержку чтобы не спамить бэк дохрелионом запросов\r\n        setTimeout(\r\n          fetchThisFilm, // функция\r\n          i * 200, // задержка\r\n          tempLocalNameFilm, // название фильма\r\n          tempLocalNameENGFilm, // eng name\r\n          tempLocalYearFilm, // год фильма\r\n          i, // номер итерации\r\n          setIsLoaded, // хук Lazzy Loading\r\n          setError, // хук error\r\n          arrayFilms, // массив фильмов\r\n          setFilmsState // хук фильмов\r\n        );\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nasync function fetchThisFilm(\r\n  localNameFilm,\r\n  localNameENGFilm,\r\n  localYearFilm,\r\n  localIDFilm,\r\n  setIsLoaded,\r\n  setError,\r\n  arrayFilms,\r\n  setFilmsState\r\n) {\r\n  // функция запустится для каждого фильма из нашего массива\r\n\r\n  try {\r\n    let queryFetch = await fetch(\r\n      `https://kinopoiskapiunofficial.tech/api/v2.1/films/search-by-keyword?keyword=${localNameFilm}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"X-API-KEY\": \"948aac51-8d03-4f10-8663-c19fe7f7eed9\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!queryFetch.ok) {\r\n      setError(`Ошибка загрузки фильмов: ${queryFetch.status}`);\r\n    } else {\r\n      let responseJSON = await queryFetch.json();\r\n\r\n      // eslint-disable-next-line array-callback-return\r\n      responseJSON.films.map((itemResponse) => {\r\n        let reqNameFilm = itemResponse.nameRu; // из полученного массива для каждого из фильмов сохраняем во временную переменную название фильма\r\n        let reqNameENGFilm = itemResponse.nameEn;\r\n        let reqYearFilm = itemResponse.year; // и год тоже\r\n\r\n        if (\r\n          (localNameFilm === reqNameFilm &&\r\n            localYearFilm === reqYearFilm &&\r\n            localNameENGFilm !== null &&\r\n            localNameENGFilm === reqNameENGFilm) ||\r\n          (localNameFilm === reqNameFilm &&\r\n            localYearFilm === reqYearFilm &&\r\n            localNameENGFilm === null)\r\n        ) {\r\n          console.log(itemResponse, localNameFilm, localYearFilm, localIDFilm);\r\n\r\n          // setFilmsState((state) => [...state, itemResponse]);\r\n          arrayFilms.push(itemResponse);\r\n\r\n          if (localIDFilm + 1 === dataMyFilms.length) {\r\n            setIsLoaded(true);\r\n            setFilmsState(arrayFilms);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  } catch (error) {\r\n    setError(`Ошибка загрузки фильмов: ${error}`);\r\n  }\r\n  // finally {}\r\n}\r\n","import \"./App.scss\";\r\nimport SiteCapGag from \"./site-capgag/Site-CapGag\";\r\nimport MyFilms from \"./my-films/My-Films\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <SiteCapGag />\r\n      <MyFilms />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.scss\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}